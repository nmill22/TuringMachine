/* Nick Miller
*  November 23, 2020
*  Turing Machine
*/

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import java.awt.*;

/** @author millernb2022 */
public class Panel extends javax.swing.JFrame {
  private final TM tm;

  /** Creates new form Panel */
  public Panel() {
    initComponents();

    tm = new TM(textArea);
    updateRunPauseButtonText();

    turingMachineTextField.setText(
        "https://klayder.com/UMU/450/2020fall/projects/TM_Data/data/tm01.txt");
    turingMachineInputTextField.setText(
        "https://klayder.com/UMU/450/2020fall/projects/TM_Data/data/inputStrings/inputStrings_01.txt");
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  private void initComponents() {

    turingMachineTextField = new javax.swing.JTextField();
    turingMachineInputTextField = new javax.swing.JTextField();
    showTMDefinition = new javax.swing.JButton();
    definitionLabel = new javax.swing.JLabel();
    inputLabel = new javax.swing.JLabel();
    showTMInputs = new javax.swing.JButton();
    readAndValidateTM = new javax.swing.JButton();
    processInputStringsUsingTM = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    textArea = new javax.swing.JTextArea();
    singleStep = new javax.swing.JButton();
    runPause = new javax.swing.JButton();
    speedLabel = new javax.swing.JLabel();
    speedSlider = new javax.swing.JSlider();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    turingMachineTextField.setText("url");

    turingMachineInputTextField.setText("url");

    showTMDefinition.setText("Show");
    showTMDefinition.addActionListener(this::ShowTMDefinitionActionPerformed);

    definitionLabel.setText("TM definition");

    inputLabel.setText("TM input");

    showTMInputs.setText("Show");
    showTMInputs.addActionListener(this::ShowTMInputActionPerformed);

    readAndValidateTM.setText("read and validate TM and input strings");
    readAndValidateTM.addActionListener(this::readAndValidateActionPerformed);

    processInputStringsUsingTM.setText("process input strings using TM");
    processInputStringsUsingTM.addActionListener(this::processInputStringsActionPerformed);

    textArea.setColumns(20);
    textArea.setRows(5);
    textArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 12));
    jScrollPane1.setViewportView(textArea);

    runPause.addActionListener(this::runPauseButtonActionPerformed);

    singleStep.setText("single step");
    singleStep.addActionListener(this::singleStepButtonActionPerformed);

    speedLabel.setText("speed");
    speedLabel.setHorizontalAlignment(SwingConstants.CENTER);
    speedLabel.setVerticalAlignment(SwingConstants.BOTTOM);

    speedSlider.setMinimum(TM.MIN_SPEED);
    speedSlider.setMaximum(TM.MAX_SPEED);
    speedSlider.setValue(TM.DEFAULT_SPEED);
    speedSlider.addChangeListener(this::speedSliderActionPerformed);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, speedSlider, speedLabel);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout
                    .createSequentialGroup()
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.LEADING,
                                layout
                                    .createSequentialGroup()
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addGap(32, 32, 32)
                                                    .addComponent(definitionLabel)
                                                    .addPreferredGap(
                                                        javax.swing.LayoutStyle.ComponentPlacement
                                                            .UNRELATED)
                                                    .addComponent(
                                                        showTMDefinition,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addGap(32, 32, 32)
                                                    .addComponent(inputLabel)
                                                    .addGap(32, 32, 32)
                                                    .addComponent(
                                                        showTMInputs,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(singleStep)
                                    .addGap(32, 32, 32)
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(runPause)
                                            .addComponent(speedLabel)
                                            .addComponent(speedSlider))
                                    .addGap(0, 309, Short.MAX_VALUE)
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(
                                                readAndValidateTM,
                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                235,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(
                                                processInputStringsUsingTM,
                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                235,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.LEADING,
                                layout
                                    .createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(
                                                turingMachineTextField,
                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(
                                                turingMachineInputTextField,
                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane1))))
                    .addContainerGap()));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(showTMDefinition)
                            .addComponent(definitionLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(
                        turingMachineTextField,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(17, 17, 17)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(showTMInputs)
                            .addComponent(inputLabel))
                    .addGap(18, 18, 18)
                    .addComponent(
                        turingMachineInputTextField,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(readAndValidateTM)
                            .addComponent(singleStep)
                            .addComponent(runPause))
                    .addGap(12, 12, 12)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(speedLabel)
                            .addComponent(processInputStringsUsingTM))
                    .addComponent(speedSlider)
                    .addGap(12, 12, 12)
                    .addComponent(
                        jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addContainerGap()));

    pack();
  }

  private void speedSliderActionPerformed(ChangeEvent changeEvent) {
    tm.setSpeed(speedSlider.getValue());
  }

  private void updateRunPauseButtonText() {
    runPause.setText(tm.isPaused() ? "run" : "pause");
  }

  private void runPauseButtonActionPerformed(java.awt.event.ActionEvent evt) {
    tm.setPause(!runPause.getText().equals("run"));
    updateRunPauseButtonText();
  }

  private void singleStepButtonActionPerformed(java.awt.event.ActionEvent evt) {
    tm.setPause(true);
    updateRunPauseButtonText();
    tm.singleStep();
  }

  private void ShowTMDefinitionActionPerformed(java.awt.event.ActionEvent evt) {
    textArea.setText("TM Definition:\n\n");

    String[] data = TM.simpleReadData(turingMachineTextField.getText());
    if (data != null) {
      textArea.append(String.join("\n", data));
    }
  }

  private void ShowTMInputActionPerformed(java.awt.event.ActionEvent evt) {
    textArea.setText("TM Input:\n\n");

    String[] data = TM.simpleReadData(turingMachineInputTextField.getText());
    if (data != null) {
      textArea.append(String.join("\n", data));
    }
  }

  private void readAndValidate(boolean pause) {
    textArea.setText("");
    try {
      tm.processDefinition(turingMachineTextField.getText());
      textArea.append("The TM definition is valid.\n\n");
      tm.processInputs(turingMachineInputTextField.getText());
      textArea.append("The input data is considered valid.\n\n");
    } catch (TM.InvalidTMDefinition e) {
      textArea.append(String.format("The TM definition is invalid.\n\n%s\n\n", e.getMessage()));
    } catch (TM.InvalidTMInputs e) {
      textArea.append(String.format("The input data is invalid.\n\n%s\n\n", e.getMessage()));
    }
    tm.setPause(pause);
    updateRunPauseButtonText();
  }

  private void readAndValidateActionPerformed(java.awt.event.ActionEvent evt) {
    readAndValidate(true);
  }

  private void processInputStringsActionPerformed(java.awt.event.ActionEvent evt) {
    readAndValidate(false);
  }

  /** @param args the command line arguments */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info :
          javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Panel.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Panel.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Panel.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Panel.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
        () -> new Panel().setVisible(true));
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton showTMDefinition;
  private javax.swing.JButton showTMInputs;
  private javax.swing.JTextArea textArea;
  private javax.swing.JLabel definitionLabel;
  private javax.swing.JTextField turingMachineTextField;
  private javax.swing.JTextField turingMachineInputTextField;
  private javax.swing.JLabel inputLabel;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton processInputStringsUsingTM;
  private javax.swing.JButton readAndValidateTM;
  private javax.swing.JButton singleStep;
  private javax.swing.JButton runPause;
  private javax.swing.JSlider speedSlider;
  private javax.swing.JLabel speedLabel;
  // End of variables declaration//GEN-END:variables
}
